"""
ğŸ“¢ Ä°lanlar Asenkron GÃ¶revleri
==============================================================================
Ä°lan sistemi iÃ§in background task'ler
==============================================================================
"""

from celery import shared_task
from django.utils import timezone
from django.core.mail import send_mail
from django.conf import settings
from datetime import timedelta
import logging

logger = logging.getLogger(__name__)


@shared_task
def ilan_suresini_guncelle():
    """
    Ä°lanlarÄ±n sÃ¼relerini kontrol et ve gerekirse durumunu gÃ¼ncelle
    GÃ¼nlÃ¼k Ã§alÄ±ÅŸtÄ±rÄ±lmalÄ±
    """
    from .models import Ilan
    
    # SÃ¼resi dolan ilanlarÄ± pasif yap
    now = timezone.now()
    suresi_dolan_ilanlar = Ilan.objects.filter(
        durum='aktif',
        bitis_tarihi__lt=now
    )
    
    updated_count = suresi_dolan_ilanlar.update(durum='suresi_doldu')
    
    logger.info(f"{updated_count} ilanÄ±n sÃ¼resi doldu ve pasif edildi")
    return f"GÃ¼ncellenen ilan sayÄ±sÄ±: {updated_count}"


@shared_task
def ilan_veren_bilgilendir(ilan_id):
    """
    Ä°lan sahibine bilgi maili gÃ¶nder
    """
    from .models import Ilan
    
    try:
        ilan = Ilan.objects.get(id=ilan_id)
        
        subject = f"Ä°lanÄ±nÄ±z '{ilan.baslik}' yayÄ±nda"
        message = f"""
        Merhaba {ilan.ilan_veren_adi},
        
        '{ilan.baslik}' baÅŸlÄ±klÄ± ilanÄ±nÄ±z baÅŸarÄ±yla yayÄ±na alÄ±nmÄ±ÅŸtÄ±r.
        
        Ä°lan linki: https://petplatform.com/ilanlar/{ilan.id}/
        
        Ä°yi gÃ¼nler!
        Pet Platform Ekibi
        """
        
        send_mail(
            subject,
            message,
            settings.DEFAULT_FROM_EMAIL,
            [ilan.ilan_veren_email],
            fail_silently=False,
        )
        
        logger.info(f"Ä°lan sahibine bilgilendirme maili gÃ¶nderildi: {ilan.id}")
        return f"Mail gÃ¶nderildi: {ilan.ilan_veren_email}"
        
    except Ilan.DoesNotExist:
        logger.error(f"Ä°lan bulunamadÄ±: {ilan_id}")
        return f"Ä°lan bulunamadÄ±: {ilan_id}"
    except Exception as e:
        logger.error(f"Mail gÃ¶nderimi baÅŸarÄ±sÄ±z: {str(e)}")
        return f"Mail gÃ¶nderimi baÅŸarÄ±sÄ±z: {str(e)}"


@shared_task
def basvuru_bilgilendir(basvuru_id):
    """
    BaÅŸvuru sahibine onay maili gÃ¶nder
    """
    from .models import IlanBasvuru
    
    try:
        basvuru = IlanBasvuru.objects.get(id=basvuru_id)
        
        subject = f"BaÅŸvurunuz alÄ±ndÄ± - {basvuru.ilan.baslik}"
        message = f"""
        Merhaba {basvuru.basvuran_adi},
        
        '{basvuru.ilan.baslik}' ilanÄ±na baÅŸvurunuz alÄ±nmÄ±ÅŸtÄ±r.
        
        MesajÄ±nÄ±z: {basvuru.mesaj}
        
        Ä°lan sahibi en kÄ±sa sÃ¼rede sizinle iletiÅŸime geÃ§ecektir.
        
        BaÅŸvuru durumu: {basvuru.get_durum_display()}
        
        Ä°yi gÃ¼nler!
        Pet Platform Ekibi
        """
        
        send_mail(
            subject,
            message,
            settings.DEFAULT_FROM_EMAIL,
            [basvuru.basvuran_email],
            fail_silently=False,
        )
        
        logger.info(f"BaÅŸvuran bilgilendirildi: {basvuru.id}")
        return f"Mail gÃ¶nderildi: {basvuru.basvuran_email}"
        
    except Exception as e:
        logger.error(f"BaÅŸvuru maili baÅŸarÄ±sÄ±z: {str(e)}")
        return f"Mail baÅŸarÄ±sÄ±z: {str(e)}"


@shared_task
def ilan_istatistiklerini_guncelle():
    """
    Ä°lan istatistiklerini gÃ¼ncelle (gÃ¼nlÃ¼k)
    """
    from .models import Ilan
    from django.db.models import Count
    
    # Kategorilere gÃ¶re ilan sayÄ±larÄ±nÄ± gÃ¼ncelle
    from apps.kategoriler.models import Kategori
    
    kategoriler = Kategori.objects.all()
    for kategori in kategoriler:
        ilan_sayisi = Ilan.objects.filter(
            hayvan__kategori=kategori,
            durum='aktif'
        ).count()
        
        kategori.kullanim_sayisi = ilan_sayisi
        kategori.save(update_fields=['kullanim_sayisi'])
    
    logger.info("Ä°lan istatistikleri gÃ¼ncellendi")
    return "Ä°statistikler gÃ¼ncellendi"


@shared_task
def geciken_ilanlar_hatirlatma():
    """
    30 gÃ¼n Ã¶nce eklenen aktif ilanlar iÃ§in hatÄ±rlatma gÃ¶nder
    """
    from .models import Ilan
    
    otuz_gun_once = timezone.now() - timedelta(days=30)
    geciken_ilanlar = Ilan.objects.filter(
        durum='aktif',
        created_at__lte=otuz_gun_once
    )
    
    for ilan in geciken_ilanlar:
        subject = f"Ä°lanÄ±nÄ±z hala aktif - {ilan.baslik}"
        message = f"""
        Merhaba {ilan.ilan_veren_adi},
        
        '{ilan.baslik}' ilanÄ±nÄ±z 30 gÃ¼ndÃ¼r yayÄ±nda.
        
        HayvanÄ±nÄ±z sahiplenildiyse lÃ¼tfen ilanÄ± kapatmayÄ± unutmayÄ±n.
        
        Ä°lan yÃ¶netimi: https://petplatform.com/ilanlarim/
        
        Pet Platform Ekibi
        """
        
        try:
            send_mail(
                subject,
                message,
                settings.DEFAULT_FROM_EMAIL,
                [ilan.ilan_veren_email],
                fail_silently=True,
            )
        except Exception as e:
            logger.error(f"HatÄ±rlatma maili gÃ¶nderilemedi: {ilan.id} - {str(e)}")
    
    logger.info(f"{geciken_ilanlar.count()} ilan iÃ§in hatÄ±rlatma gÃ¶nderildi")
    return f"HatÄ±rlatma sayÄ±sÄ±: {geciken_ilanlar.count()}"
