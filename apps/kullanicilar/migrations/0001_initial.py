# Generated by Django 4.2 on 2025-05-31 21:14

import apps.ortak.validators
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(help_text='Giriş için kullanılacak e-posta adresi', max_length=254, unique=True, verbose_name='E-posta')),
                ('first_name', models.CharField(help_text='Gerçek adınız', max_length=50, validators=[apps.ortak.validators.validate_user_input_security], verbose_name='Ad')),
                ('last_name', models.CharField(help_text='Gerçek soyadınız', max_length=50, validators=[apps.ortak.validators.validate_user_input_security], verbose_name='Soyad')),
                ('telefon', models.CharField(blank=True, help_text='İletişim için telefon numaranız', max_length=20, validators=[django.core.validators.RegexValidator(message='Geçerli bir Türkiye telefon numarası giriniz', regex='^(\\+90|0)?[5][0-9]{9}$')], verbose_name='Telefon Numarası')),
                ('sehir', models.CharField(blank=True, choices=[('istanbul', 'İstanbul'), ('ankara', 'Ankara'), ('izmir', 'İzmir'), ('bursa', 'Bursa'), ('antalya', 'Antalya'), ('konya', 'Konya'), ('adana', 'Adana'), ('gaziantep', 'Gaziantep'), ('other', 'Diğer')], help_text='Hangi şehirde yaşıyorsunuz?', max_length=50, verbose_name='Şehir')),
                ('biyografi', models.TextField(blank=True, help_text='Kendinizi tanıtın - hayvan sevginizi anlatın (500 karakter)', max_length=500, validators=[apps.ortak.validators.validate_user_input_security], verbose_name='Kısa Biyografi')),
                ('profil_resmi', models.ImageField(blank=True, help_text="Profil fotoğrafınız (5MB'a kadar)", null=True, upload_to='profil_resimleri/%Y/%m/', verbose_name='Profil Resmi')),
                ('rol', models.CharField(choices=[('user', 'Kullanıcı'), ('shelter_staff', 'Barınak Çalışanı'), ('veterinary', 'Veteriner'), ('volunteer', 'Gönüllü'), ('moderator', 'Moderatör'), ('admin', 'Yönetici')], default='user', help_text='Platformdaki rolünüz', max_length=20, verbose_name='Kullanıcı Rolü')),
                ('durum', models.CharField(choices=[('active', 'Aktif'), ('inactive', 'Pasif'), ('suspended', 'Askıya Alınmış'), ('banned', 'Yasaklanmış')], default='active', max_length=20, verbose_name='Hesap Durumu')),
                ('email_dogrulanmis', models.BooleanField(default=False, help_text='E-posta adresi doğrulandı mı?', verbose_name='E-posta Doğrulandı')),
                ('email_dogrulama_token', models.CharField(blank=True, max_length=100, verbose_name='E-posta Doğrulama Token')),
                ('email_dogrulama_tarihi', models.DateTimeField(blank=True, null=True, verbose_name='E-posta Doğrulama Tarihi')),
                ('sahiplendiren_mi', models.BooleanField(default=False, help_text='Hayvan sahiplendirmek istiyorum', verbose_name='Sahiplendiren')),
                ('sahiplenmek_istiyor_mu', models.BooleanField(default=True, help_text='Hayvan sahiplenmek istiyorum', verbose_name='Sahiplenmek İstiyor')),
                ('email_bildirimleri', models.BooleanField(default=True, help_text='E-posta ile bildirim almak istiyorum', verbose_name='E-posta Bildirimleri')),
                ('push_bildirimleri', models.BooleanField(default=True, help_text='Tarayıcı bildirimleri almak istiyorum', verbose_name='Push Bildirimleri')),
                ('son_giris_tarihi', models.DateTimeField(blank=True, null=True, verbose_name='Son Giriş Tarihi')),
                ('giris_sayisi', models.PositiveIntegerField(default=0, verbose_name='Giriş Sayısı')),
                ('uyelik_tarihi', models.DateTimeField(auto_now_add=True, verbose_name='Üyelik Tarihi')),
                ('guncelleme_tarihi', models.DateTimeField(auto_now=True, verbose_name='Son Güncelleme')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': '👤 Kullanıcı',
                'verbose_name_plural': '👤 Kullanıcılar',
                'ordering': ['-uyelik_tarihi'],
            },
        ),
        migrations.CreateModel(
            name='KullaniciProfil',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Kayıt ilk oluşturulduğunda otomatik set edilir', verbose_name='Oluşturulma Tarihi')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Kayıt her güncellendiğinde otomatik güncellenir', verbose_name='Güncellenme Tarihi')),
                ('instagram_hesabi', models.CharField(blank=True, help_text='Instagram kullanıcı adınız', max_length=100, verbose_name='Instagram Hesabı')),
                ('facebook_hesabi', models.CharField(blank=True, max_length=100, verbose_name='Facebook Hesabı')),
                ('hayvan_deneyimi_yil', models.PositiveIntegerField(blank=True, help_text='Kaç yıldır hayvan bakıyorsunuz?', null=True, verbose_name='Hayvan Deneyimi (Yıl)')),
                ('daha_once_sahiplendin_mi', models.BooleanField(default=False, help_text='Daha önce hayvan sahiplendiniz mi?', verbose_name='Daha Önce Sahiplendin mi?')),
                ('veteriner_referansi', models.CharField(blank=True, help_text='Referans veteriner hekim bilgisi', max_length=200, verbose_name='Veteriner Referansı')),
                ('ev_tipi', models.CharField(blank=True, choices=[('apartman', 'Apartman Dairesi'), ('mustakil', 'Müstakil Ev'), ('villa', 'Villa'), ('bahceli', 'Bahçeli Ev'), ('diger', 'Diğer')], max_length=50, verbose_name='Ev Tipi')),
                ('bahce_var_mi', models.BooleanField(default=False, verbose_name='Bahçe Var mı?')),
                ('diger_hayvanlar', models.TextField(blank=True, help_text='Evde başka hayvan var mı? Varsa neler?', max_length=300, verbose_name='Diğer Hayvanlar')),
                ('kimlik_dogrulandi_mi', models.BooleanField(default=False, help_text='Kimlik belgesi doğrulandı mı?', verbose_name='Kimlik Doğrulandı')),
                ('referans_kisi_1', models.CharField(blank=True, help_text='İsim - Telefon', max_length=150, verbose_name='Referans Kişi 1')),
                ('referans_kisi_2', models.CharField(blank=True, help_text='İsim - Telefon', max_length=150, verbose_name='Referans Kişi 2')),
                ('kullanici', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profil_detay', to=settings.AUTH_USER_MODEL, verbose_name='Kullanıcı')),
            ],
            options={
                'verbose_name': '📋 Kullanıcı Profil Detayı',
                'verbose_name_plural': '📋 Kullanıcı Profil Detayları',
            },
        ),
        migrations.AddIndex(
            model_name='customuser',
            index=models.Index(fields=['email'], name='kullanicila_email_6c6b55_idx'),
        ),
        migrations.AddIndex(
            model_name='customuser',
            index=models.Index(fields=['durum', 'email_dogrulanmis'], name='kullanicila_durum_b132f5_idx'),
        ),
        migrations.AddIndex(
            model_name='customuser',
            index=models.Index(fields=['sehir'], name='kullanicila_sehir_fa75dc_idx'),
        ),
        migrations.AddIndex(
            model_name='customuser',
            index=models.Index(fields=['rol'], name='kullanicila_rol_92f6d0_idx'),
        ),
    ]
